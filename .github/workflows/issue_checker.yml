name: Respond to Ollama Query

on:
  issues:
    types: [opened]

jobs:
  respond:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Cache Ollama and Python dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/ollama  # Cache Ollama installation
            ~/.cache/pip     # Cache Python packages
          key: ${{ runner.os }}-ollama-${{ hashFiles('**/requirements.txt') }}  # Cache key based on OS and requirements
          restore-keys: |
            ${{ runner.os }}-ollama- # Fallback to previous caches if exact match not found

      - name: Install Ollama
        run: |
          echo "Installing Ollama..."
          curl -fsSL https://ollama.com/install.sh | sh

      - name: Verify Ollama Installation
        run: |
          echo "Verifying Ollama installation..."
          ollama --version  # Check if Ollama is installed correctly

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Start Ollama Service
        run: |
          echo "Starting Ollama service..."
          nohup ollama serve &  # Start the Ollama service in the background

      - name: Run the Ollama interactor
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # GitHub token for authentication
        run: |
          echo "Running Ollama interactor for issue number ${{ github.event.issue.number }}"
          python ollama_interactor.py ${{ github.event.issue.number }}  # Pass the issue number as CLI argument

      - name: Comment on the GitHub issue using GitHub CLI
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # GitHub token for authentication
        run: |
          response_content=$(cat response.txt)  # Read response from file
          echo "Commenting on the issue with response from the model..."
          gh auth login --with-token <<< "$GITHUB_TOKEN"  # Authenticate with GitHub CLI
          gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/unaveragetech/Gitbot/issues/${{ github.event.issue.number }}/comments \
            -f "body=$response_content"

      - name: Save cache after the run
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/ollama  # Cache Ollama installation
            ~/.cache/pip     # Cache Python packages
          key: ${{ runner.os }}-ollama-${{ hashFiles('**/requirements.txt') }}  # Same key as before
